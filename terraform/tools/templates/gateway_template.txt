resource "aws_api_gateway_resource" "{name}" {
  rest_api_id = aws_api_gateway_rest_api.scrapstack.id
  parent_id   = aws_api_gateway_rest_api.scrapstack.root_resource_id
  path_part   = "{name}"
}

resource "aws_api_gateway_method" "{name}_proxy" {
  rest_api_id   = aws_api_gateway_rest_api.scrapstack.id
  resource_id   = aws_api_gateway_resource.{name}.id
  http_method   = "{action}"
  authorization = "NONE"
}

resource "aws_api_gateway_integration" "{name}_lambda_integration" {
  rest_api_id             = aws_api_gateway_rest_api.scrapstack.id
  resource_id             = aws_api_gateway_resource.{name}.id
  http_method             = aws_api_gateway_method.{name}_proxy.http_method
  integration_http_method = "POST"
  type                    = "AWS_PROXY"
  uri                     = var.{name}_invoke_arn
}

resource "aws_api_gateway_method_response" "{name}_proxy" {
  rest_api_id = aws_api_gateway_rest_api.scrapstack.id
  resource_id = aws_api_gateway_resource.{name}.id
  http_method = aws_api_gateway_method.{name}_proxy.http_method
  status_code = "200"

  response_parameters = {
    "method.response.header.Access-Control-Allow-Headers" = true,
    "method.response.header.Access-Control-Allow-Methods" = true,
    "method.response.header.Access-Control-Allow-Origin"  = true
  }
}

resource "aws_api_gateway_integration_response" "{name}_proxy" {
  rest_api_id = aws_api_gateway_rest_api.scrapstack.id
  resource_id = aws_api_gateway_resource.{name}.id
  http_method = aws_api_gateway_method.{name}_proxy.http_method
  status_code = aws_api_gateway_method_response.{name}_proxy.status_code

  response_parameters = {
    "method.response.header.Access-Control-Allow-Headers" = "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
    "method.response.header.Access-Control-Allow-Methods" = "'GET,OPTIONS,POST,PUT'",
    "method.response.header.Access-Control-Allow-Origin"  = "'*'"
  }

  depends_on = [
    aws_api_gateway_method.{name}_proxy,
    aws_api_gateway_integration.{name}_lambda_integration
  ]
}
